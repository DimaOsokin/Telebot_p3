from aiogram import Bot, types


async def start_inlain_only_auto(message):
    from main import bot

    kp = types.InlineKeyboardMarkup()
    # btn1 = types.InlineKeyboardButton(text='–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º—ã–π –¥–∏–∞–ø–∞–∑–æ–Ω', callback_data='start_inlain_only_auto_btn1')
    btn2 = types.InlineKeyboardButton(text='–û—Ç—á—ë—Ç—ã –∑–∞ –≤—á–µ—Ä–∞', callback_data='start_inlain_only_auto_btn2')
    btn3 = types.InlineKeyboardButton(text='–û—Ç—á—ë—Ç—ã –∑–∞ —Å–µ–≥–æ–¥–Ω—è', callback_data='start_inlain_only_auto_btn3')

    # kp.add(btn1)
    kp.add(btn2)
    kp.add(btn3)

    await bot.send_message(message.from_user.id, '–û—Ç—á—ë—Ç—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —É—á–∞—Å—Ç–∫–∞', reply_markup=kp)


async def start_inlain_only_VRO(message):
    from main import bot
    kp = types.InlineKeyboardMarkup()

    # btn1 = types.InlineKeyboardButton(text='–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º—ã–π –¥–∏–∞–ø–∞–∑–æ–Ω', callback_data='start_inlain_only_VRO_btn1')
    btn2 = types.InlineKeyboardButton(text='–û—Ç—á—ë—Ç—ã –∑–∞ –≤—á–µ—Ä–∞', callback_data='start_inlain_only_VRO_btn2')
    btn3 = types.InlineKeyboardButton(text='–û—Ç—á—ë—Ç—ã –∑–∞ —Å–µ–≥–æ–¥–Ω—è', callback_data='start_inlain_only_VRO_btn3')
    # kp.add(btn1)
    kp.add(btn2)
    kp.add(btn3)
    await bot.send_message(message.from_user.id, '–û—Ç—á—ë—Ç—ã –í–†–û', reply_markup=kp)


async def start_button_auto_lvl_1(message):
    from main import bot
    from connect_to_DB_p3 import select_first_and_seconds_name
    from aiogram.types import ReplyKeyboardRemove, \
        ReplyKeyboardMarkup, KeyboardButton, \
        InlineKeyboardMarkup, InlineKeyboardButton

    second_first_name = select_first_and_seconds_name(message.from_user.id)
    button_start_lvl_1 = KeyboardButton('–ú–µ–Ω—é')
    kb = ReplyKeyboardMarkup(resize_keyboard=True).add(button_start_lvl_1)

    await bot.send_message(message.chat.id, f'{second_first_name} üëã', reply_markup=kb)


async def today_inlain_report_auto(user_fio, report_today_date, report_yesterday_date):
    """
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ—Ç—á—ë—Ç –∑–∞: –°–ï–ì–û–î–ù–Ø –∏–ª–∏ –í–ß–ï–†–ê
        –ï—Å–ª–∏ –æ—Ç—á—ë—Ç–∞ –Ω–µ—Ç, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç None
        :param user_fio: –§–∞–º–∏–ª–∏—è –ò–º—è
        :param report_today_date: –í—á–µ—Ä–∞
        :param report_yesterday_date: –°–µ–≥–æ–¥–Ω—è
        :return: str –∏–ª–∏ None
        """
    from aiogram.utils.exceptions import MessageTextIsEmpty
    from connect_to_DB_p3 import check_report_yesterday_or_today_auto
    try:  # –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —É—á–∞—Å—Ç–æ–∫ –°–ï–ì–û–î–ù–Ø
        today_report_func_auto = check_report_yesterday_or_today_auto(report_today_date, user_fio)
        # –ø—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –æ—Ç—á—ë—Ç–∞ - –ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞, —Ç–æ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—à–∏–±–∫–∞ MessageTextIsEmpty
        if today_report_func_auto == '':
            raise MessageTextIsEmpty("Message text is empty")
        return today_report_func_auto
    # –∑–∞ —Å–µ–≥–æ–¥–Ω—è –æ—Ç—á—ë—Ç–æ–≤ –Ω–µ—Ç
    except MessageTextIsEmpty:
        yesterday_report_func_auto = check_report_yesterday_or_today_auto(report_yesterday_date, user_fio)
        # –ø—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –æ—Ç—á—ë—Ç–∞ - –ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞, —Ç–æ return None
        if yesterday_report_func_auto == '':
            return None
        return yesterday_report_func_auto


async def today_inlain_report_VRO(user_fio, report_today_date, report_yesterday_date):
    """
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ—Ç—á—ë—Ç –∑–∞: –°–ï–ì–û–î–ù–Ø –∏–ª–∏ –í–ß–ï–†–ê
        –ï—Å–ª–∏ –æ—Ç—á—ë—Ç–∞ –Ω–µ—Ç, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç None
        :param user_fio: –§–∞–º–∏–ª–∏—è –ò–º—è
        :param report_today_date: –í—á–µ—Ä–∞
        :param report_yesterday_date: –°–µ–≥–æ–¥–Ω—è
        :return: str –∏–ª–∏ None
        """
    from aiogram.utils.exceptions import MessageTextIsEmpty
    from connect_to_DB_p3 import check_report_yesterday_or_today_VRO
    try:  # –í–†–û –°–ï–ì–û–î–ù–Ø
        today_report_func_VRO = check_report_yesterday_or_today_VRO(report_today_date, user_fio)
        # –ø—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –æ—Ç—á—ë—Ç–∞ - –ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞, —Ç–æ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—à–∏–±–∫–∞ MessageTextIsEmpty
        if today_report_func_VRO == '':
            raise MessageTextIsEmpty("Message text is empty")
        return today_report_func_VRO
    # –∑–∞ —Å–µ–≥–æ–¥–Ω—è –æ—Ç—á—ë—Ç–æ–≤ –Ω–µ—Ç
    except MessageTextIsEmpty:
        yesterday_report_func_VRO = check_report_yesterday_or_today_VRO(report_yesterday_date, user_fio)
        # –ø—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –æ—Ç—á—ë—Ç–∞ - –ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞, —Ç–æ return None
        if yesterday_report_func_VRO == '':
            return None
        return yesterday_report_func_VRO